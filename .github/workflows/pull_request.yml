# Copyright (c) the JPEG XL Project Authors. All rights reserved.
#
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

# Workflow to run pull-requests specific checks.

name: PR
on:
  pull_request:
    types: [opened, reopened, synchronize]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # Run source tests: author list, copyright notice and merge conflicts.
  authors:
    runs-on: [ubuntu-latest]
    steps:
    - name: Checkout the source
      uses: actions/checkout@v4
    - name: Check AUTHORS file
      run:
        ./ci/pull_request_checks.sh

  checks:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        check: [format, clippy, test]
        features: [all, default]
        exclude:
          # Remove the "format+all" combination, since it is the same as "format+default"
          - check: format
            features: all
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install latest rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Rust cache
        uses: Swatinem/rust-cache@v2.7.3

      # format
      - name: Cargo fmt (check)
        if: ${{ matrix.check == 'format' }}
        run: cargo fmt --all -- --check

      # clippy
      - name: Clippy with all features
        if: ${{ matrix.check == 'clippy' && matrix.features == 'all' }}
        run: cargo clippy --release --all-targets --all-features --tests --all -- -D warnings

      - name: Clippy with default features
        if: ${{ matrix.check == 'clippy' && matrix.features == 'default' }}
        run: cargo clippy --release --all-targets --tests --all -- -D warnings

      # test
      - name: Tests with all features
        if: ${{ matrix.check == 'test' && matrix.features == 'all' }}
        run: cargo test --release --all --no-fail-fast --all-features

      - name: Tests with default features
        if: ${{ matrix.check == 'test' && matrix.features == 'default' }}
        run: cargo test --release --all --no-fail-fast

  coverage:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the source
      uses: actions/checkout@v4

    - name: Install latest rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Rust cache
      uses: Swatinem/rust-cache@v2.7.3

    - name: Install llvm-cov
      run: cargo +stable install cargo-llvm-cov --locked

    - name: Build and gather coverage
      run: cargo llvm-cov --no-report

    - name: Generate JSON report
      run: cargo llvm-cov report --json --output-path=coverage.json

    - name: Distill summary
      run: ./ci/coverage_summary.py >> $GITHUB_STEP_SUMMARY

    - name: Generate HTML report
      run: cargo llvm-cov report --html --output-dir=coverage_html

    - name: Upload HTML report
      uses: actions/upload-artifact@v4.6.2
      with:
        name: coverage_report
        path: ./coverage_html/html
